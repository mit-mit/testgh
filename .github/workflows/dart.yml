name: Dart CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache pub packages
        uses: actions/cache@v2
        with:
          # Cache pub hosted directory, which contains packages downloaded from pub.dev.
          path: "~/.pub-cache/hosted"
          # Use this string is as the cache key (the templated values will be filled in when the task is running)
          key: "os:ubuntu-latest;pub-cache-hosted;dart:${{ matrix.sdk }};packages:${{ github.repository }}"
          # Try to find existing caches to initialize this case with, it will use the first match
          restore-keys: |
            # exact match, should have everything we need.
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:${{ github.repository }}
            # cache from another run on a build on the same channel, might have some things we need.
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            # cache from another run on a build on a different channel, might have some things we need.
            os:${{ matrix.os }};pub-cache-hosted
      - uses: dart-lang/setup-dart@v0.1
        with:
          channel: stable
      - name: Install dependencies
        run: dart pub get
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
      - name: Analyze code
        run: dart analyze

  test:
    needs: analyze
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        channel: [stable, beta, dev]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v0.1
        with:
          channel: ${{ matrix.channel }}
      - name: Install dependencies
        run: dart pub get
      - name: Run tests
        run: dart test
